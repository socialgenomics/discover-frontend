version: 2

workflows:
  version: 2
  test_and_release:
    jobs:

      - compute_tag:
          filters:
            branches:
              only:
                - master
                - cmp-rc
                - cmp-prod

      - test_and_make:
          filters:
            branches:
              ignore:
                - dis-prod

      - build_container_local:
          filters:
            branches:
              only:
                - master
          requires:
            - test_and_make
            - compute_tag

      - build_container_qa:
          filters:
            branches:
              only:
                - master
          requires:
            - test_and_make
            - compute_tag

      - build_container_dis-rc:
          filters:
            branches:
              only:
                - master
          requires:
            - test_and_make
            - compute_tag

      - build_container_dis-prod:
          filters:
            branches:
              only:
                - dis-rc
          requires:
            - test_and_make
            - compute_tag

      - release_dis-rc:
          filters:
            branches:
              only:
                - dis-rc
          requires:
            - compute_tag

      - release_dis-prod:
          filters:
            branches:
              only:
                - dis-prod
          requires:
            - compute_tag

      - create_release_tag:
          requires:
            - release_dis-rc
            - release_dis-prod

deploy_image: &deploy_image
  docker:
    - image: reposibot/deployer:latest
  steps:
    - attach_workspace:
        at: .
    - run:
        name: release staging
        command: |
          TAG="$(cat tag.txt)-${CIRCLE_BRANCH}"
          curl -sSO -u "${DEPLOYER_USERNAME}":"${DEPLOYER_PASSWORD}" \
            "https://deployer.repositive.io/scripts/deploy.sh"
          sh deploy.sh "$CIRCLE_PROJECT_REPONAME:$TAG" $CLUSTER $CONFIG_PATH $CIRCLE_BRANCH

build_container: &build_container
  docker:
    - image: circleci/node:8.5-browsers
  steps:
    - checkout
    - setup_remote_docker
    - attach_workspace:
        at: .
    - run:
        name: Build ember app
        command: |
          REPO="${CIRCLE_PROJECT_REPONAME}"
          TAG="$(cat tag.txt)"
          API_BASE_URL="${API_BASE_URL}"

          node_modules/ember-cli/bin/ember build --environment "${EMBER_ENV}"
          docker build -t app .
          docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD" registry.repositive.io:5000
          docker tag app "registry.repositive.io:5000/${REPO}:latest-${TARGET}"
          docker tag app "registry.repositive.io:5000/${REPO}:${TAG}-${TARGET}"
          docker push "registry.repositive.io:5000/${REPO}:latest-${TARGET}"
          docker push "registry.repositive.io:5000/${REPO}:${TAG}-${TARGET}"

jobs:

  compute_tag:
    machine: true
    steps:
      - checkout
      - run: echo "$(git rev-parse --short HEAD)" > tag.txt
      - persist_to_workspace:
          root: .
          paths:
            - tag.txt

  test_and_make:
    docker:
      - image: circleci/node:8.5-browsers
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run: yarn
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run: npm test
      - persist_to_workspace:
          root: .
          paths:
            - node_modules

  build_container_local:
    environment:
      - TARGET: 'local'
      - EMBER_ENV: 'local-development'
      - API_BASE_URL: 'http://localhost:3000'
    <<: *build_container

  build_container_qa:
    environment:
      - TARGET: 'qa'
      - EMBER_ENV: 'staging'
      - API_BASE_URL: 'http://proxy:3000'
    <<: *build_container

  build_container_dis-rc:
    environment:
      - TARGET: 'dis-rc'
      - EMBER_ENV: 'staging'
      - API_BASE_URL: 'https://api-dev.repositive.io'
    <<: *build_container

  build_container_dis-rc:
    environment:
      - TARGET: 'dis-prod'
      - EMBER_ENV: 'production'
      - API_BASE_URL: 'https://api.repositive.io'
    <<: *build_container

  create_release_tag:
    machine: true
    steps:
      - checkout
      - run:
          name: Create release tag
          command: |
            TAG=$(date +"%Y%m%d%H%M%S")
            SHA="$(git rev-parse HEAD)"
            curl -fsS -u "${GITHUB_USERNAME}":"${GITHUB_PASSWORD}" \
              -d '{"ref":"refs/tags/'"${TAG}"'", "sha":"'"${SHA}"'"}' \
              -X POST "https://api.github.com/repos/repositive/${CIRCLE_PROJECT_REPONAME}/git/refs"

  release_dis-rc:
    environment:
      - TARGET: 'dis-rc' # This is needed to build the right image tag! ${TAG}-${TARGET}
      - CLUSTER: 'dis-dev'
      - CONFIG_PATH: '.circleci/k8s.dis-rc.yml'
    <<: *deploy_image

  release_production:
    environment:
      - TARGET: 'dis-prod' # This is needed to build the right image tag! ${TAG}-${TARGET}
      - CLUSTER: 'dis-prod'
      - CONFIG_PATH: '.circleci/k8s.dis-prod.yml'
    <<: *deploy_image
